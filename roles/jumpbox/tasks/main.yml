---
# Setup Ansible
- name: install epel-release packages
  become: True
  yum: 
    name: epel-release 

- name: install ansible packages
  become: True
  yum:
    name: "{{ packages }}"
  vars:
    packages:
    - ansible
    - git

# Setup of Environment
## Setup Inventory for nodes
## Share SSH Public Keys to nodes
## Check Private key into ansible vault (or other)
## Test connections by touching a file
#- name: Deploy SSH Keys

#- name: Test SSH Connection by touching a file on each node in $HOME

# Manage TeamServer Properties
## Start with general.properties, then build
## Need to pause and understand corporate best practices (ansible tower? control node?  user laptops?)
## Confirm node startup (curl to node?)
## Confirm nodes in service (curl to load balancer?)
## Integrate encrypted files after all plaintext (protip: use *.cleartext trick)

- name: Create wheel
  group:
    name: wheel

- name: Create user
  user:
    name: contrast_ssh_user
    group: wheel
    append: yes
  register: control_node_user

- name: Allow 'wheel' group to have passwordless sudo
  lineinfile:
    dest: /etc/sudoers
    state: present
    regexp: '^%wheel'
    line: '%wheel ALL=(ALL) NOPASSWD: ALL'
    validate: 'visudo -cf %s'

- name: Copy Private SSH Key
  copy:
    src: "{{ item }}"
    dest: "{{ control_node_user.home }}/.ssh/"
  loop: 
    - "{{ contrast_private_ssh_key }}"
    - "{{ contrast_public_ssh_key }}"

- name: Copy site.yml template
  copy:
    src: "{{ item }}"
    dest: "{{ control_node_user.home }}/"
  loop:
    - "inventory"
    - "contrast_site.yml"

- name: Clone ansible-role-teamserver
  git:
    repo: 'https://github.com/Contrast-Security-OSS/ansible-role-teamserver.git'
    dest: /etc/ansible/roles/ansible-role-teamserver
    accept_hostkey: yes
    version: "{{ role_version }}"


# Upgrade TS Software
## Integrate new artifact location
## Move artifact(s) from origin to destination (ts nodes)
## Rolling restart of nodes (notify / handlers)
## Confirm node startup (curl to node?)
## Confirm nodes in service (curl to load balancer?)
#- name: Move artifact from X to Y

#- name: Rolling restart of inventory

#- name: Confirm startup

#- name: Confirm load balancer in service


